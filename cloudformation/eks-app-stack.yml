AWSTemplateFormatVersion: "2010-09-09"
Description: "EKS App Stack"

Parameters:
  AvailabilityZones:
    Description: "List of Availability Zones to use for the subnets in the VPC. Note: The logical order is preserved."
    Type: "List<AWS::EC2::AvailabilityZone::Name>"

  NumberOfAZs:
    Type: Number
    AllowedValues:
      - 2
      - 3
      - 4
    Default: 3
    Description:  Number of AZs for VPC Stack
    MinValue: 2

  QSS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    Default: aws-quickstart
    Description: AWS Quick Start S3 bucket name
    Type: String
    MinLength: 1

  QSS3BucketRegion:
    Default: 'us-east-1'
    Description: The AWS Region where the Quick Start S3 bucket (QSS3BucketName) is
      hosted. When using your own bucket, you must specify this value.
    Type: String
    MinLength: 1

  KubernetesVersion:
    Type: String
    AllowedValues: [ "1.14", "1.15"]
    Description: "Kubernetes Version"
    Default: "1.15"

  AdditionalEKSAdminArns:
    Type: "CommaDelimitedList"
    Description: "Additional roles/user ARNs (without path) that needs to be assigned admin access to EKS Cluster"

  EKSAppWorkerInstanceType:
    Type: "String"
    Default: t3.small
    Description:  Kubernetes worker nodes instance types for application
    MinLength: 1

  EKSAppWorkerNumberOfNodes:
    Type: "Number"
    Default: 1
    Description:  Kubernetes worker nodes instance types for application
    MinValue: 1

  EKSAppWorkerMaxNumberOfNodes:
    Type: "Number"
    Default: 5
    Description:  Maximum number of worker nodes in EKS Cluster (application)
    MinValue: 1

  EKSKeyPairName:
    Type: AWS::EC2::KeyPair::KeyName
    Description:  KeyPair for kubernetes nodes
    MinLength: 1

  ManagedNodeGroup:
    Type: String
    AllowedValues: [ "yes", "no"]
    Description:  "Use managed node group. (Note: ClusterAutoscaling needs to be manually configured for ManagedNodeGroup)"
    Default: "yes"

  CustomCfnBucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    Default: cf-templates-1vzdydri8ipup-us-west-2
    Description: Custom Cloudformation Bucket Name
    Type: String
    MinLength: 1

  CustomCfnBucketRegion:
    Default: 'us-west-2'
    Description: The AWS Region where the S3 bucket (CustomCfnBucketName) is
      hosted. When using your own bucket, you must specify this value.
    Type: String
    MinLength: 1

  CustomCfnBucketPrefix:
    Default: ''
    Description: Folder prefix for CustomCfnBucketName where cloudformation templates are present.
      (Keep this parameter empty if cloudformation templates are in root of the bucket.)
    Type: String


Conditions:
  UsingManagedNodeGroup:
    !Equals [!Ref 'ManagedNodeGroup', 'yes']

Resources:
  VPCStack:
    Type: "AWS::CloudFormation::Stack"
    Description: "VPC Stack"
    Properties:
      TemplateURL: !Sub "https://${QSS3BucketName}.s3.${QSS3BucketRegion}.${AWS::URLSuffix}/quickstart-aws-vpc/templates/aws-vpc.template"
      Parameters:
        AvailabilityZones:
          !Join
          - ','
          - !Ref AvailabilityZones
        NumberOfAZs: !Ref NumberOfAZs
        CreatePrivateSubnets: "true"
        CreateAdditionalPrivateSubnets: "true"
        PrivateSubnetATag1: "type=app"
        # Use Private SubnetA for Internal ALB (Ingress)
        PrivateSubnetATag2: "kubernetes.io/role/internal-elb=1"
        PrivateSubnetBTag1: "type=db"
        PublicSubnetTag1:   "type=public"
        # Use Public Subnet for External ALB (Ingress)
        PublicSubnetTag2:   "kubernetes.io/role/elb=1"

    DeletionPolicy: "Delete"

  # EKS Resources
  EKSStack:
    Type: "AWS::CloudFormation::Stack"
    Description: "Kubernetes Stack"
    Properties:
      TemplateURL: !Sub "https://${QSS3BucketName}.s3.${QSS3BucketRegion}.${AWS::URLSuffix}/quickstart-amazon-eks/templates/amazon-eks.template.yaml"
      Parameters:
        ProvisionBastionHost: "Disabled"
        KeyPairName: !Ref EKSKeyPairName
        ManagedNodeGroup: !Ref ManagedNodeGroup
        ManagedNodeGroupAMIType: "AL2_x86_64"
        NodeInstanceType: !Ref EKSAppWorkerInstanceType
        NumberOfNodes: !Ref EKSAppWorkerNumberOfNodes
        MaxNumberOfNodes: !Ref EKSAppWorkerMaxNumberOfNodes
        ProvisionClusterAutoScaler:
          !If [UsingManagedNodeGroup, "Disabled", "Enabled"]
        NodeVolumeSize: 20
        VPCID: !GetAtt VPCStack.Outputs.VPCID
         # Uncomment below lines to enable public control plane
        PublicSubnet1ID: !GetAtt VPCStack.Outputs.PublicSubnet1ID
        PublicSubnet2ID: !GetAtt VPCStack.Outputs.PublicSubnet2ID
        PublicSubnet3ID: !GetAtt VPCStack.Outputs.PublicSubnet3ID
        PrivateSubnet1ID: !GetAtt VPCStack.Outputs.PrivateSubnet1AID
        PrivateSubnet2ID: !GetAtt VPCStack.Outputs.PrivateSubnet2AID
        PrivateSubnet3ID: !GetAtt VPCStack.Outputs.PrivateSubnet3AID

        KubernetesVersion: !Ref KubernetesVersion
        AdditionalEKSAdminArns:
          !Join
          - ','
          - !Ref AdditionalEKSAdminArns
        QSS3BucketName: !Ref QSS3BucketName
        QSS3BucketRegion: !Ref QSS3BucketRegion
        # Block Remote Access by using IP that does not exist. This is needed as template as it is required in template
        RemoteAccessCIDR: '0.0.0.0/32'
    DeletionPolicy: "Delete"

  EKSOidcProviderStack:
    Type: "AWS::CloudFormation::Stack"
    Description: "Configures OIDC Provider for EKS"
    DependsOn: EKSStack
    Properties:
      TemplateURL: !Sub "https://${CustomCfnBucketName}.s3.${CustomCfnBucketRegion}.${AWS::URLSuffix}${CustomCfnBucketPrefix}/eks-oidc-provider.yaml"
      Parameters:
        EKSClusterName: !GetAtt EKSStack.Outputs.EKSClusterName
    DeletionPolicy: "Delete"

  AlbIngressControllerStack:
    Type: "AWS::CloudFormation::Stack"
    Description: "Configures ALB Ingress controller"
    DependsOn: [EKSStack,EKSOidcProviderStack]
    Properties:
      TemplateURL: !Sub "https://${CustomCfnBucketName}.s3.${CustomCfnBucketRegion}.${AWS::URLSuffix}${CustomCfnBucketPrefix}/eks-alb-ingress-controller.yaml"
      Parameters:
        KubeManifestLambdaArn: !GetAtt EKSStack.Outputs.KubeManifestLambdaArn
        KubeConfigPath: !GetAtt EKSStack.Outputs.KubeConfigPath
        EksClusterOidcUrl: !GetAtt EKSOidcProviderStack.Outputs.ClusterOIDCURL
        EksClusterName: !GetAtt EKSStack.Outputs.EKSClusterName
    DeletionPolicy: "Delete"